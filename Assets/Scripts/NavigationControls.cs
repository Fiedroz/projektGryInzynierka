//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/NavigationControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @NavigationControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @NavigationControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""NavigationControls"",
    ""maps"": [
        {
            ""name"": ""Navigation"",
            ""id"": ""2185dfbf-b38a-46be-8ca1-ab88e5d92cf5"",
            ""actions"": [
                {
                    ""name"": ""GoUp"",
                    ""type"": ""Button"",
                    ""id"": ""d8c0fa60-af84-4e09-a4bb-fcae89198788"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GoDown"",
                    ""type"": ""Button"",
                    ""id"": ""9fdd0bd8-a2fa-4ff2-a80f-728ed3c0d11f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GoLeft"",
                    ""type"": ""Button"",
                    ""id"": ""2799b1f8-813c-40cd-bc88-0a31ea9f1195"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GoRight"",
                    ""type"": ""Button"",
                    ""id"": ""83126677-90a6-43e6-81d6-94a50c3ccda4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""72c306ad-a742-4701-a15e-38d293723740"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Return"",
                    ""type"": ""Button"",
                    ""id"": ""7a58e238-4746-452b-845c-ff4492685cd1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5f91d24c-9f1a-443b-96d0-890a98764454"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27538d7e-6578-4509-b7cc-298928149b23"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c872f9c5-1413-4d4e-a921-b02f80ce437f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6521d700-df53-4062-b879-3f3a072f0ce9"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5fe70921-e464-495e-a1dc-c324f8123b3a"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c88944f-4967-4739-8877-64a8c4ea9cc1"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Navigation
        m_Navigation = asset.FindActionMap("Navigation", throwIfNotFound: true);
        m_Navigation_GoUp = m_Navigation.FindAction("GoUp", throwIfNotFound: true);
        m_Navigation_GoDown = m_Navigation.FindAction("GoDown", throwIfNotFound: true);
        m_Navigation_GoLeft = m_Navigation.FindAction("GoLeft", throwIfNotFound: true);
        m_Navigation_GoRight = m_Navigation.FindAction("GoRight", throwIfNotFound: true);
        m_Navigation_Confirm = m_Navigation.FindAction("Confirm", throwIfNotFound: true);
        m_Navigation_Return = m_Navigation.FindAction("Return", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Navigation
    private readonly InputActionMap m_Navigation;
    private INavigationActions m_NavigationActionsCallbackInterface;
    private readonly InputAction m_Navigation_GoUp;
    private readonly InputAction m_Navigation_GoDown;
    private readonly InputAction m_Navigation_GoLeft;
    private readonly InputAction m_Navigation_GoRight;
    private readonly InputAction m_Navigation_Confirm;
    private readonly InputAction m_Navigation_Return;
    public struct NavigationActions
    {
        private @NavigationControls m_Wrapper;
        public NavigationActions(@NavigationControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @GoUp => m_Wrapper.m_Navigation_GoUp;
        public InputAction @GoDown => m_Wrapper.m_Navigation_GoDown;
        public InputAction @GoLeft => m_Wrapper.m_Navigation_GoLeft;
        public InputAction @GoRight => m_Wrapper.m_Navigation_GoRight;
        public InputAction @Confirm => m_Wrapper.m_Navigation_Confirm;
        public InputAction @Return => m_Wrapper.m_Navigation_Return;
        public InputActionMap Get() { return m_Wrapper.m_Navigation; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NavigationActions set) { return set.Get(); }
        public void SetCallbacks(INavigationActions instance)
        {
            if (m_Wrapper.m_NavigationActionsCallbackInterface != null)
            {
                @GoUp.started -= m_Wrapper.m_NavigationActionsCallbackInterface.OnGoUp;
                @GoUp.performed -= m_Wrapper.m_NavigationActionsCallbackInterface.OnGoUp;
                @GoUp.canceled -= m_Wrapper.m_NavigationActionsCallbackInterface.OnGoUp;
                @GoDown.started -= m_Wrapper.m_NavigationActionsCallbackInterface.OnGoDown;
                @GoDown.performed -= m_Wrapper.m_NavigationActionsCallbackInterface.OnGoDown;
                @GoDown.canceled -= m_Wrapper.m_NavigationActionsCallbackInterface.OnGoDown;
                @GoLeft.started -= m_Wrapper.m_NavigationActionsCallbackInterface.OnGoLeft;
                @GoLeft.performed -= m_Wrapper.m_NavigationActionsCallbackInterface.OnGoLeft;
                @GoLeft.canceled -= m_Wrapper.m_NavigationActionsCallbackInterface.OnGoLeft;
                @GoRight.started -= m_Wrapper.m_NavigationActionsCallbackInterface.OnGoRight;
                @GoRight.performed -= m_Wrapper.m_NavigationActionsCallbackInterface.OnGoRight;
                @GoRight.canceled -= m_Wrapper.m_NavigationActionsCallbackInterface.OnGoRight;
                @Confirm.started -= m_Wrapper.m_NavigationActionsCallbackInterface.OnConfirm;
                @Confirm.performed -= m_Wrapper.m_NavigationActionsCallbackInterface.OnConfirm;
                @Confirm.canceled -= m_Wrapper.m_NavigationActionsCallbackInterface.OnConfirm;
                @Return.started -= m_Wrapper.m_NavigationActionsCallbackInterface.OnReturn;
                @Return.performed -= m_Wrapper.m_NavigationActionsCallbackInterface.OnReturn;
                @Return.canceled -= m_Wrapper.m_NavigationActionsCallbackInterface.OnReturn;
            }
            m_Wrapper.m_NavigationActionsCallbackInterface = instance;
            if (instance != null)
            {
                @GoUp.started += instance.OnGoUp;
                @GoUp.performed += instance.OnGoUp;
                @GoUp.canceled += instance.OnGoUp;
                @GoDown.started += instance.OnGoDown;
                @GoDown.performed += instance.OnGoDown;
                @GoDown.canceled += instance.OnGoDown;
                @GoLeft.started += instance.OnGoLeft;
                @GoLeft.performed += instance.OnGoLeft;
                @GoLeft.canceled += instance.OnGoLeft;
                @GoRight.started += instance.OnGoRight;
                @GoRight.performed += instance.OnGoRight;
                @GoRight.canceled += instance.OnGoRight;
                @Confirm.started += instance.OnConfirm;
                @Confirm.performed += instance.OnConfirm;
                @Confirm.canceled += instance.OnConfirm;
                @Return.started += instance.OnReturn;
                @Return.performed += instance.OnReturn;
                @Return.canceled += instance.OnReturn;
            }
        }
    }
    public NavigationActions @Navigation => new NavigationActions(this);
    public interface INavigationActions
    {
        void OnGoUp(InputAction.CallbackContext context);
        void OnGoDown(InputAction.CallbackContext context);
        void OnGoLeft(InputAction.CallbackContext context);
        void OnGoRight(InputAction.CallbackContext context);
        void OnConfirm(InputAction.CallbackContext context);
        void OnReturn(InputAction.CallbackContext context);
    }
}
